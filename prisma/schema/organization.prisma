model Organization {
  id           String   @id @default(cuid())
  name         String
  fantasyName  String?  @map("fantasy_name")
  socialName   String?  @map("social_name")
  cnpj         String?
  phone        String?
  email        String?
  zipcode      String?
  address      String?
  city         String?
  state        String?
  neighborhood String?
  slug         String   @unique
  plan         String   @default("free")
  logo         String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  owner        User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId      String   @map("owner_id")

  invites    Invite[]
  members    Member[]
  stockItems Item[]
  category   Category[]
  customers  Customer[]
  contracts  Contract[]

  @@map("organizations")
}

model Member {
  id             String       @id @default(uuid())
  role           Role         @default(MEMBER)
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String       @map("organization_id")
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String       @map("user_id")
  
  contracts      Contract[]

  @@unique([organizationId, userId])
  @@map("members")
}

model Invite {
  id             String       @id @default(uuid())
  email          String
  role           Role
  createdAt      DateTime     @default(now()) @map("created_at")
  author         User?        @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId       String?      @map("author_id")
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String       @map("organization_id")

  @@unique([email, organizationId])
  @@index([email])
  @@map("invites")
}
